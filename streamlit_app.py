# streamlit_app.py

import streamlit as st
from streamlit_gsheets import GSheetsConnection
import pandas as pd

st.set_page_config(
    page_title="Flaric Reports",
    page_icon="ЁЯЧЬя╕П",
    layout="centered",
    initial_sidebar_state="expanded",
    menu_items={
        "Get Help": "https://t.me/SharafatKarim",
        "Report a bug": "https://github.com/SharafatKarim/flaric-reports/issues",
        "About": "App is made with love by Rising Flare community. Source code is available in [GitHub](https://github.com/SharafatKarim/flaric-reports/). Feel free to contribute.",
    },
)

st.title("ЁЯЧЬя╕П Flaric Reports")
st.markdown(
    "> **Rising Flare** ржПрж░ ржЕржнрж┐ржпрзЛржЧ ржУ ржкрж░рж╛ржорж░рзНрж╢ ржХрзЗржирзНржжрзНрж░ред ржЖржкржирж╛рж░ ржирж╛ржо ржмрж╛ ржЖржЗржбрж┐ ржмрж╛ ржХрзЛржирзЛ рждржерзНржпржЗ ржЖржорж╛ржжрзЗрж░ ржХрж╛ржЫрзЗ ржЬржорж╛ ржерж╛ржХрж╛рж░ рж╕рзБржпрзЛржЧржУ ржирзЗржЗред ржкрж╛рж╢рж╛ржкрж╛рж╢рж┐ ржЖржкржирж╛рж░ ржкрзНрж░ржжрждрзНржд рждржерзНржпржУ ржЧрзЛржкржи ржерж╛ржХржмрзЗред"
)
st.markdown(
    "> **Rising Flare**'s complaint and advice center. We do not store any information about your name, ID, or any other information. Your provided information will also remain confidential."
)

st.markdown("---")

st.subheader("ржЪрж▓рзБржи рж╢рзБрж░рзБ ржХрж░рж┐...")
st.markdown("> ржирж┐ржЪрзЗрж░ ржкрзНрж░ржжрждрзНржд рждржерзНржпржЧрзБрж▓рзЛ ржорзЗрж╣рзЗрж░ржмрж╛ржирж┐ ржХрж░рзЗ ржкрзВрж░ржг ржХрж░рзБржи ржПржмржВ рж╕рж╛ржмржорж┐ржЯ ржХрж░рзБржиред")

title = st.text_input("рж╢рж┐рж░рзЛржирж╛ржо", placeholder="ржЙржжрж╛рж╣рж╛рж░ржгрж╕рзНржмрж░рзВржк, resource ржЦрзБржЬрзЗ ржкрж╛ржЗ ржирж╛...")
title_description = st.text_area(
    "ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд",
    placeholder="ржЙржжрж╛рж╣рж╛рж░ржгрж╕рзНржмрж░рзВржк, рж╕ржмржЧрзБрж▓рзЛ ржмрж┐рж╖рзЯржнрж┐рждрзНрждрж┐ржХ ржЯржкрж┐ржХрзЗ ржПржХржЗ рж╕рж╛ржерзЗ progress ржУ resource ржПрж░ рж╕ржВржорж┐рж╢рзНрж░ржгрзЗрж░ ржХрж╛рж░ржгрзЗ progress ржЦрзБржЬрзЗ ржкрзЗрждрзЗ ржЕрж╕рзБржмрж┐ржзрж╛ рж╣рзЯ...",
)

try:
    conn = st.connection("gsheets", type=GSheetsConnection)
    if st.button("рж╕рж╛ржмржорж┐ржЯ ржХрж░рзБржи", icon=":material/mood:", use_container_width=True):
        # Read the latest data from the spreadsheet
        df = conn.read()

        data = {"Title": title, "Description": title_description}
        temp_df = pd.DataFrame([data])

        # Update the dataframe and the spreadsheet
        updated_df = pd.concat([df, temp_df], ignore_index=True)
        conn.update(data=updated_df)
        st.success("рж╕ржлрж▓ржнрж╛ржмрзЗ рж╕рж╛ржмржорж┐ржЯ рж╣рзЯрзЗржЫрзЗ!")

except Exception as e:
    st.error(f"Error: {e}")
